Sanity check SDEP decryption
============================
Tags: signed-direct-encrypted-pseudonym,sanity-check,@bsnkeiddo-4840@

* Load dataset from "/v1/signed-direct-encrypted-pseudonym/sanity_check.yaml"
* Target default endpoint "/signed-direct-encrypted-pseudonym"

### Given

A SignedDirectEncryptedPseudonym, SP-key, schemekey and closingkey is provided as input for the decryption component

### When

The SignedEncryptedPseudonym and/or keys have invalid content/invalid format or the input length is to big

### Then

No decrypted Pseudonym is returned in the response message with corresponding error status

### Description

Alternate flows:
-- Request with length >= 1MB
-- Schemekey-metadata in wrong format [metadata-error]
-- Schemekey in wrong format [key-error]
-- Duplicate key-metadata
-- SP-Key processing: keys from multiple OIN,
-- -BER-encoded EI/EP/DEP input-
-- -compressed ECPoint(s) in EI/EP/DEP-
-- Check if all SP-Key headers are present;
--- ignore non-specified headers
--- refuse duplicate headers
--- Case sensitive

The *auditElement* and *signatureValue* have no static values and will change when new
test data is generated. When new test data is generated by Logius, the corresponding expected
test results are produced as well.



Scenario 2: Scheme key metadata is not parsable according to scheme key format
------------------------------------------------------------------------------
Tags: @bsnkeiddo-4886@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_2.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_2.request.schemeKeys                         | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_2.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_2.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_2.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_2.expectations.statusCode                    | string          }}      |
* Expect response body contains "SCHEME_KEY_METADATA_INVALID_STRUCTURE"
* Fail if expectations are not met


Scenario 3: Scheme key structure doesn't start with '0x04'
----------------------------------------------------------
Tags: @bsnkeiddo-4887@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_3.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_3.request.schemeKeys                         | base64ResourceMap   }}  |
    | serviceProviderKeys                 | {{ scenario_3.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_3.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_3.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_3.expectations.statusCode                    | string          }}      |
* Expect response body contains "SCHEME_KEY_NOT_UNCOMPRESSED"
* Fail if expectations are not met

Scenario 4a: Scheme key total length < 81bytes
----------------------------------------------
Tags: @bsnkeiddo-4888@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_4a.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_4a.request.schemeKeys                        | base64ResourceMap   }}  |
    | serviceProviderKeys                 | {{ scenario_4a.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_4a.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_4a.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_4a.expectations.statusCode                   | string          }}      |
* Expect response body contains "SCHEME_KEY_INVALID_LENGTH"
* Fail if expectations are not met

Scenario 4b: Scheme key total length > 81bytes
-----------------------------------------------
Tags: @bsnkeiddo-5043@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_4b.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_4b.request.schemeKeys                        | base64ResourceMap   }}  |
    | serviceProviderKeys                 | {{ scenario_4b.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_4b.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_4b.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_4b.expectations.statusCode                   | string          }}      |
* Expect response body contains "SCHEME_KEY_INVALID_LENGTH"
* Fail if expectations are not met


Scenario 5: Scheme key points not on curve - BrainpoolP320r1
------------------------------------------------------------
Tags: @bsnkeiddo-4889@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_5.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_5.request.schemeKeys                         | base64ResourceMap   }}  |
    | serviceProviderKeys                 | {{ scenario_5.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_5.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_5.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_5.expectations.statusCode                    | string          }}      |
* Expect response body contains "SCHEME_KEY_NOT_DECODABLE"
* Fail if expectations are not met


Scenario 6: Scheme Key schemeVersion <> 1
------------------------------------------
Tags: @bsnkeiddo-4890@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_6.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_6.request.schemeKeys                         | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_6.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_6.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_6.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_6.expectations.statusCode                    | string          }}      |
* Expect response body contains "SCHEME_KEY_METADATA_INVALID_STRUCTURE"
* Fail if expectations are not met



Scenario 7: Key names for 'U'-scheme keys must be unique
--------------------------------------------------------
Tags: @bsnkeiddo-4891@

The request is rejected if it contains duplicate object key names: uniqueness is determined by the object key name,
not the the value.

* Send payload
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | payload                             | {{ scenario_7.request.payload                            | string          }}      |
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_7.expectations.statusCode                    | string          }}      |
* Expect response body contains "JsonMappingException"
* Expect response body contains "Duplicate field"
* Expect response body contains "SDEP_U_DUP_KEY"
* Fail if expectations are not met




Scenario 8: Scheme key-metadata environment is not identical for all supplied keys
----------------------------------------------------------------------------------
Tags: @bsnkeiddo-4892@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_8.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_8.request.schemeKeys                         | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_8.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_8.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_8.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_8.expectations.statusCode                    | string          }}      |
* Expect response body contains "SCHEME_KEYS_ENVIRONMENT_NON_UNIQUE"
* Fail if expectations are not met


Scenario 9: SP-key Pdd has duplicate headers
--------------------------------------------
Tags: @bsnkeiddo-4893@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_9.request.signedDirectEncryptedPseudonym     | binary              }}  |
    | schemeKeys                          | {{ scenario_9.request.schemeKeys                         | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_9.request.serviceProviderKeys                | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_9.request.targetClosingKey                   | string              }}  |
    | authorizedParty                     | {{ scenario_9.request.authorizedParty                    | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_9.expectations.statusCode                    | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 10: SP-key Pcd has duplicate headers
---------------------------------------------
Tags: @bsnkeiddo-4894@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_10.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_10.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_10.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_10.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_10.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_10.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 11: SP-key Drki has duplicate headers
----------------------------------------------
Tags: @bsnkeiddo-4895@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_11.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_11.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_11.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_11.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_11.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_11.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met

Scenario 14: Non-specified headers are present in Service provider key Pdd
--------------------------------------------------------------------------
Tags: @bsnkeiddo-4898@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_14.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_14.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_14.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_14.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_14.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                 | {{ scenario_14.expectations.statusCode            | string                 }} |
    | body                                       | {{ scenario_14.expectations.responseBody          | json                   }} |
    | json.decodedInput.signedDEP.auditElement   | {{ scenario_14.expectations.auditValue            | string_resource        }} |
    | json.decodedInput.signatureValue           | {{ scenario_14.expectations.signatureValue        | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue       | {{ scenario_14.expectations.pseudonymValue        | string_resource        }} |
* Fail if expectations are not met


Scenario 15: Non-specified headers are present in Closing key
-------------------------------------------------------------
Tags: @bsnkeiddo-4898@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_15.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_15.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_15.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_15.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_15.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                 | {{ scenario_15.expectations.statusCode            | string                 }} |
    | body                                       | {{ scenario_15.expectations.responseBody          | json                   }} |
    | json.decodedInput.signedDEP.auditElement   | {{ scenario_15.expectations.auditValue            | string_resource        }} |
    | json.decodedInput.signatureValue           | {{ scenario_15.expectations.signatureValue        | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue       | {{ scenario_15.expectations.pseudonymValue        | string_resource        }} |
* Fail if expectations are not met


Scenario 16: Non-specified headers are present in Direct receiving key
----------------------------------------------------------------------
Tags: @bsnkeiddo-4900@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_16.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_16.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_16.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_16.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_16.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                 | {{ scenario_16.expectations.statusCode            | string                 }} |
    | body                                       | {{ scenario_16.expectations.responseBody          | json                   }} |
    | json.decodedInput.signedDEP.auditElement   | {{ scenario_16.expectations.auditValue            | string_resource        }} |
    | json.decodedInput.signatureValue           | {{ scenario_16.expectations.signatureValue        | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue       | {{ scenario_16.expectations.pseudonymValue        | string_resource        }} |
* Fail if expectations are not met


Scenario 17: SP-key Pdd header doesn't match casing
---------------------------------------------------
Tags: @bsnkeiddo-4901@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_17.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_17.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_17.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_17.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_17.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_17.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 18: SP-key Pcd header doesn't match casing
---------------------------------------------------
Tags: @bsnkeiddo-4902@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_18.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_18.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_18.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_18.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_18.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_18.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 19: SP-key Drk header doesn't match casing
---------------------------------------------------
Tags: @bsnkeiddo-4903@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_19.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_19.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_19.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_19.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_19.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_19.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 20: SP-key Pdd missing required header
------------------------------------------------
Tags: @bsnkeiddo-5011@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_20.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_20.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_20.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_20.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_20.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_20.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met


Scenario 21: SP-key Pcd missing required header
-----------------------------------------------
Tags: @bsnkeiddo-5012@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_21.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_21.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_21.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_21.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_21.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_21.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met



Scenario 22: SP-key Drk missing required header
-----------------------------------------------
Tags: @bsnkeiddo-5013@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                            | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_22.request.signedDirectEncryptedPseudonym    | binary              }}  |
    | schemeKeys                          | {{ scenario_22.request.schemeKeys                        | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_22.request.serviceProviderKeys               | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_22.request.targetClosingKey                  | string              }}  |
    | authorizedParty                     | {{ scenario_22.request.authorizedParty                   | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                         | expectedValue                                            | expectedValueType       |
    |-------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                          | {{ scenario_22.expectations.statusCode                   | string          }}      |
* Expect response body contains "SERVICE_PROVIDER_KEY_PARSE_FAILED"
* Fail if expectations are not met

