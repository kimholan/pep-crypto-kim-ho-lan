Validation and/or decryption SignedDirectEncryptedPseudonym fails - Alternate Flow
==================================================================================
Tags: signed-direct-encrypted-pseudonym,alternate-flow,@bsnkeiddo-4704@

* Load dataset from "/v1/signed-direct-encrypted-pseudonym/alternate_flows.yaml"
* Target default endpoint "/signed-direct-encrypted-pseudonym"

### Given

A SignedDirectEncryptedPseudonym, SP-key, schemekey and closingkey is provided as input for the decryption component

### When

The SignedDirectEncryptedPseudonym and/or keys are invalid or the combination does not match

### Then

No Pseudonym is returned in the response message with corresponding error status

### Description

error flows
-- DEP with invalid signature
-- mismatch between key-material and DEP:
--- different OINs
--- different schemeKeySetVersion
--- different recipientKeySetVersions
--- different target closingKeySetVersions
--- different AuthorizedParty
-- input not a DEP
-- input DEP,  structure unkown
-- input missing decryption key
-- input missing closing key
-- input missing scheme key
-- input missing DRK
-- input missing AuthorizedParty
-- malformed AuthorizedParty
-- malformed key in input

NB: Diagnostic information will be tested in the specific logging story BSNKEIDDO-4533

The *auditElement* and *signatureValue* have no static values and will change when new
test data is generated. When new test data is generated by Logius, the corresponding expected
test results are produced as well.



Scenario 1: SignedDirectEncryptedPseudonym invalid signed
---------------------------------------------------------
Tags: @bsnkeiddo-4729@

* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_1.request.signedDirectEncryptedPseudonym                       | binary              }}  |
     | schemeKeys                          | {{ scenario_1.request.schemeKeys                                           | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_1.request.serviceProviderKeys                                  | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_1.request.targetClosingKey                                     | string              }}  |
     | authorizedParty                     | {{ scenario_1.request.authorizedParty                                      | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_1.expectations.statusCode                    | string          }}      |
* Expect response body contains "SIGNATURE_VERIFICATION_FAILED"
* Fail if expectations are not met



Scenario 2: Mismatch between SignedDirectEncryptedPseudonym OIN and pdd OIN
---------------------------------------------------------------------------
Tags: @bsnkeiddo-4730@

Only the pdd OIN is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_2.request.signedDirectEncryptedPseudonym                       | binary              }}  |
    | schemeKeys                          | {{ scenario_2.request.schemeKeys                                           | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_2.request.serviceProviderKeys                                  | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_2.request.targetClosingKey                                     | string              }}  |
    | authorizedParty                     | {{ scenario_2.request.authorizedParty                                      | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_2.expectations.statusCode                    | string          }}      |
* Expect response body contains "MATCHING_SERVICE_PROVIDER_KEY_REQUIRED"
* Expect response body contains "SERVICE_PROVIDER_KEYS_RECIPIENT_NON_UNIQUE"
* Fail if expectations are not met



Scenario 3: Mismatch between SignedDirectEncryptedPseudonym OIN and pcd OIN
---------------------------------------------------------------------------
Tags: @bsnkeiddo-4731@

Only the pcd OIN is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_3.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_3.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_3.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_3.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_3.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_3.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_CLOSING_KEY_REQUIRED"
* Expect response body contains "SERVICE_PROVIDER_KEYS_RECIPIENT_NON_UNIQUE"
* Fail if expectations are not met



Scenario 4: Mismatch between SignedDirectEncryptedPseudonym OIN and drk OIN
---------------------------------------------------------------------------
Tags: @bsnkeiddo-4732@

Only the drk OIN is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_4.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_4.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_4.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_4.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_4.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_4.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_DIRECT_RECEIVE_KEY_REQUIRED"
* Expect response body contains "SERVICE_PROVIDER_KEYS_RECIPIENT_NON_UNIQUE"
* Fail if expectations are not met



Scenario 5: Mismatch between SignedDirectEncryptedPseudonym SKSV and pdd SKSV
-----------------------------------------------------------------------------
Tags: @bsnkeiddo-4733@

Only the pdd SchemeKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_5.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_5.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_5.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_5.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_5.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_5.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SERVICE_PROVIDER_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 6: Mismatch between SignedDirectEncryptedPseudonym SKSV and pcd SKSV
-----------------------------------------------------------------------------
Tags: @bsnkeiddo-4734@

Only the pcd SchemeKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_6.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_6.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_6.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_6.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_6.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_6.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_CLOSING_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 7: Mismatch between SignedDirectEncryptedPseudonym SKSV and drk SKSV
-----------------------------------------------------------------------------
Tags: @bsnkeiddo-4735@

Only the drk SchemeKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_7.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_7.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_7.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_7.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_7.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_7.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_DIRECT_RECEIVE_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 8: Mismatch between SignedDirectEncryptedPseudonym SKSV and U-key SKSV
-------------------------------------------------------------------------------
Tags: @bsnkeiddo-4736@

Only the U-key SchemeKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_8.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_8.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_8.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_8.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_8.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_8.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SCHEME_KEY_NOT_FOUND"
* Fail if expectations are not met


Scenario 9: Mismatch between SignedDirectEncryptedPseudonym RKSV and pdd RKSV
-----------------------------------------------------------------------------
Tags: @bsnkeiddo-4737@

Only the pdd RecipientKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_9.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_9.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_9.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_9.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_9.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_9.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SERVICE_PROVIDER_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 10: Mismatch between SignedDirectEncryptedPseudonym RKSV and pcd RKSV
------------------------------------------------------------------------------
Tags: @bsnkeiddo-4738@

Only the pcd RecipientKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_10.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_10.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_10.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_10.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_10.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_10.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_CLOSING_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 11: Mismatch between SignedDirectEncryptedPseudonym RKSV and drk RKSV
------------------------------------------------------------------------------
Tags: @bsnkeiddo-4739@

Only the drk RecipientKeySetVersion is different from the rest
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_11.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_11.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_11.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_11.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_11.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_11.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_DIRECT_RECEIVE_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 12: Mismatch between SignedDirectEncryptedPseudonym authorizedParty and authorizedParty input
------------------------------------------------------------------------------------------------------
Tags: @bsnkeiddo-4740@

A different authorizedParty OIN is given as input
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_12.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_12.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_12.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_12.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_12.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_12.expectations.statusCode                   | string          }}      |
* Expect response body contains "DIRECT_TRANSMISSION_DECRYPTION_NOT_AUTHORIZED"
* Fail if expectations are not met



Scenario 13: Target closing key doesn't match the closing key
-------------------------------------------------------------
Tags: @bsnkeiddo-4741@

A different targetClosingKey OIN is given as input
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_13.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_13.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_13.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_13.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_13.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_13.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_CLOSING_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 14: Input is a SignedEncryptedPseudonym instead of a SignedDirectEncryptedPseudonym
--------------------------------------------------------------------------------------------
Tags: @bsnkeiddo-4742@

* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_14.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_14.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_14.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_14.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_14.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_14.expectations.statusCode                   | string          }}      |
* Expect response body contains "OID_NOT_SUPPORTED"
* Fail if expectations are not met




Scenario 15: Unknown structure of SignedDirectEncryptedPseudonym
----------------------------------------------------------------
Tags: @bsnkeiddo-4743@

* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_15.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_15.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_15.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_15.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_15.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_15.expectations.statusCode                   | string          }}      |
* Expect response body contains "ASN1_MAPPING_FAILED; PEP_SCHEMA_ASN1_DECODE"
* Fail if expectations are not met


Scenario 16: Input missing pdd service provider key
---------------------------------------------------
Tags: @bsnkeiddo-4744@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_16.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_16.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_16.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_16.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_16.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_16.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SERVICE_PROVIDER_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 17: Input missing drk service provider key
---------------------------------------------------
Tags: @bsnkeiddo-4745@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_17.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_17.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_17.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_17.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_17.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_17.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_DIRECT_RECEIVE_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 18: Input missing closing key
--------------------------------------
Tags: @bsnkeiddo-4746@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_18.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_18.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_18.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_18.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_18.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_18.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_CLOSING_KEY_REQUIRED"
* Fail if expectations are not met



Scenario 19: Input missing U-key
--------------------------------
Tags: @bsnkeiddo-4747@

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_19.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_19.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_19.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_19.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_19.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_19.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SCHEME_KEY_NOT_FOUND"
* Fail if expectations are not met



Scenario 20: Input missing authorizedParty
------------------------------------------
Tags: @bsnkeiddo-4748@

AuthorizedParty as separate input field is empty
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_20.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_20.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_20.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_20.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_20.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_20.expectations.statusCode                   | string          }}      |
* Expect response body contains "DIRECT_TRANSMISSION_DECRYPTION_NOT_AUTHORIZED"
* Fail if expectations are not met



Scenario 21: Input authorizedParty malformed
--------------------------------------------
Tags: @bsnkeiddo-4749@

 AuthorizedParty as separate input field doens't contains 20 digits
* Create OASSignedDirectEncryptedPseudonymRequest
     | propertyName                        | propertyValue                                                              | propertyFilter          |
     |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
     | signedDirectEncryptedPseudonym      | {{ scenario_21.request.signedDirectEncryptedPseudonym                      | binary              }}  |
     | schemeKeys                          | {{ scenario_21.request.schemeKeys                                          | schemeKeys          }}  |
     | serviceProviderKeys                 | {{ scenario_21.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
     | targetClosingKey                    | {{ scenario_21.request.targetClosingKey                                    | string              }}  |
     | authorizedParty                     | {{ scenario_21.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
     | actualValue                                           | expectedValue                                            | expectedValueType       |
     |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
     | statusCode                                            | {{ scenario_21.expectations.statusCode                   | string          }}      |
* Expect response body contains "property path: processRequest.arg0.authorizedParty"
* Fail if expectations are not met



Scenario 26: Key version from URN is applied for selecting the U-key
--------------------------------------------------------------------
Tags: @bsnkeiddo-4759@

No URN for U-key matches signedDirectEncryptedPseudonym, correct U-key available for URN with different key version.
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_26.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_26.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_26.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_26.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_26.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_26.expectations.statusCode                   | string          }}      |
* Expect response body contains "MATCHING_SCHEME_KEY_NOT_FOUND"
* Fail if expectations are not met


Scenario 27: Key selection restricted to URN
--------------------------------------------
Tags: @bsnkeiddo-4760@

Key selection succeeds, but signature verification fails, even if valid key value is available.
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                        | propertyValue                                                              | propertyFilter          |
    |-------------------------------------|----------------------------------------------------------------------------|-------------------------|
    | signedDirectEncryptedPseudonym      | {{ scenario_27.request.signedDirectEncryptedPseudonym                      | binary              }}  |
    | schemeKeys                          | {{ scenario_27.request.schemeKeys                                          | schemeKeys          }}  |
    | serviceProviderKeys                 | {{ scenario_27.request.serviceProviderKeys                                 | serviceProviderKeys }}  |
    | targetClosingKey                    | {{ scenario_27.request.targetClosingKey                                    | string              }}  |
    | authorizedParty                     | {{ scenario_27.request.authorizedParty                                     | string              }}  |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                           | expectedValue                                            | expectedValueType       |
    |-------------------------------------------------------|----------------------------------------------------------|-------------------------|
    | statusCode                                            | {{ scenario_27.expectations.statusCode                   | string          }}      |
* Expect response body contains "SIGNATURE_VERIFICATION_FAILED"
* Fail if expectations are not met
