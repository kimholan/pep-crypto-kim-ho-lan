Successfully validate and decrypt SignedDirectEncryptedPseudonym - Happy Flow
=============================================================================
Tags: signed-direct-encrypted-pseudonym,happy-flow,@bsnkeiddo-4698@

* Load dataset from "/v1/signed-direct-encrypted-pseudonym/happy_flow.yaml"
* Target default endpoint "/signed-direct-encrypted-pseudonym"

### Given

A SignedDirectEncryptedPseudonym, SP-key, schemekey and closingkey is provided as input for the decryption component

### When

The SignedDirectEncryptedPseudonym and keys are validated, the SignedDirectEncryptedPseudonym is succesfully decrypted

### Then

The decrypted Pseudonym and the additional fields from DEP/SignedDEP are returned in the response message

### Description

Mapping AC tests:

happy flow
-- different OINs
-- different schemeKeySetVersion
-- different recipientKeySetVersions
-- different target closingKeySetVersions
-- different AuthorizedParty
-- ECDSA signed


NB: Diagnostic information will be tested in the specific logging story BSNKEIDDO-4533

The *auditElement* and *signatureValue* have no static values and will change when new test data is generated. 
When new test data is generated by Logius, the corresponding expected test results are produced as well.


Scenario 1: SchemeKeySetVersion 1 for OIN A, RKSV A, CKSV A, DRK A, authorizedParty A - target closingKey = empty
-----------------------------------------------------------------------------------------------------------------
Tags: @bsnkeiddo-4726@

Decryption applies the closing key for the recipient key set version matching the SignedDirectEncryptedPseudonym
if no specific closing key version is specified separately by 'targetClosingKey'-property.

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                               | propertyValue                                        | propertyFilter            |
    |--------------------------------------------|------------------------------------------------------|---------------------------|
    | signedDirectEncryptedPseudonym             | {{ scenario_1.request.signedDirectEncryptedPseudonym | binary                 }} |
    | schemeKeys                                 | {{ scenario_1.request.schemeKeys                     | schemeKeys             }} |
    | serviceProviderKeys                        | {{ scenario_1.request.serviceProviderKeys            | serviceProviderKeys    }} |
    | targetClosingKey                           | {{ scenario_1.request.targetClosingKey               | string                 }} |
    | authorizedParty                            | {{ scenario_1.request.authorizedParty                | string                 }} |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                | expectedValue                                        | expectedValueType         |
    |--------------------------------------------|------------------------------------------------------|---------------------------|
    | statusCode                                 | {{ scenario_1.expectations.statusCode                | string                 }} |
    | body                                       | {{ scenario_1.expectations.responseBody              | json                   }} |
    | json.decodedInput.signedDEP.auditElement   | {{ scenario_1.expectations.auditValue                | string_resource        }} |
    | json.decodedInput.signatureValue           | {{ scenario_1.expectations.signatureValue            | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue       | {{ scenario_1.expectations.pseudonymValue            | string_resource        }} |
* Fail if expectations are not met




Scenario 2: SchemeKeySetVersion 10 for OIN B, RKSV B, CKSV B, DRK B, authorizedParty B - target closingKey B
------------------------------------------------------------------------------------------------------------
Tags: @bsnkeiddo-4727@

Decryption applies the closing key for the recipient key set version differing from the SignedDirectEncryptedPseudonym
if such a closing key is present in the 'serviceProviderKeys'-property and the differing version is
specified by 'targetClosingKey'-property.

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                               | propertyValue                                        | propertyFilter            |
    |--------------------------------------------|------------------------------------------------------|---------------------------|
    | signedDirectEncryptedPseudonym             | {{ scenario_2.request.signedDirectEncryptedPseudonym | binary                 }} |
    | schemeKeys                                 | {{ scenario_2.request.schemeKeys                     | schemeKeys             }} |
    | serviceProviderKeys                        | {{ scenario_2.request.serviceProviderKeys            | serviceProviderKeys    }} |
    | targetClosingKey                           | {{ scenario_2.request.targetClosingKey               | string                 }} |
    | authorizedParty                            | {{ scenario_2.request.authorizedParty                | string                 }} |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                                | expectedValue                                        | expectedValueType         |
    |--------------------------------------------|------------------------------------------------------|---------------------------|
    | statusCode                                 | {{ scenario_2.expectations.statusCode                | string                 }} |
    | body                                       | {{ scenario_2.expectations.responseBody              | json                   }} |
    | json.decodedInput.signedDEP.auditElement   | {{ scenario_2.expectations.auditValue                | string_resource        }} |
    | json.decodedInput.signatureValue           | {{ scenario_2.expectations.signatureValue            | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue       | {{ scenario_2.expectations.pseudonymValue            | string_resource        }} |
* Fail if expectations are not met




Scenario 3: RKSV A with CKV C, multiple keys provided as input
--------------------------------------------------------------
Tags: @bsnkeiddo-4728@

Key selection is not affected by supplying one or more extra U-key, PD_D-key, DRKi- or PC_D-keys belonging
to the same service provider.

The decryption result for recipientKeySetVersion A with targetClosingKey C should match the
second decryption for recipientKeySetVersion C and targetClosingKey C, even though the
decryption keys have differing recipientKeySetVersion values.

* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                             | propertyValue                                          | propertyFilter            |
    |------------------------------------------|--------------------------------------------------------|---------------------------|
    | signedDirectEncryptedPseudonym           | {{ scenario_3.request_1.signedDirectEncryptedPseudonym | binary                 }} |
    | schemeKeys                               | {{ scenario_3.request_1.schemeKeys                     | schemeKeys             }} |
    | serviceProviderKeys                      | {{ scenario_3.request_1.serviceProviderKeys            | serviceProviderKeys    }} |
    | targetClosingKey                         | {{ scenario_3.request_1.targetClosingKey               | string                 }} |
    | authorizedParty                          | {{ scenario_3.request_1.authorizedParty                | string                 }} |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                              | expectedValue                                          | expectedValueType         |
    |------------------------------------------|--------------------------------------------------------|---------------------------|
    | statusCode                               | {{ scenario_3.expectations_1.statusCode                | string                 }} |
    | body                                     | {{ scenario_3.expectations_1.responseBody              | json                   }} |
    | json.decodedInput.signedDEP.auditElement | {{ scenario_3.expectations_1.auditValue                | string_resource        }} |
    | json.decodedInput.signatureValue         | {{ scenario_3.expectations_1.signatureValue            | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue     | {{ scenario_3.expectations_2.pseudonymValue            | string_resource        }} |
    | json.decodedPseudonym.pseudonymValue     | {{ scenario_3.expectations_1.pseudonymValue            | string_resource        }} |
* Fail if expectations are not met
* Create OASSignedDirectEncryptedPseudonymRequest
    | propertyName                             | propertyValue                                          | propertyFilter            |
    |------------------------------------------|--------------------------------------------------------|---------------------------|
    | signedDirectEncryptedPseudonym           | {{ scenario_3.request_2.signedDirectEncryptedPseudonym | binary                 }} |
    | schemeKeys                               | {{ scenario_3.request_2.schemeKeys                     | schemeKeys             }} |
    | serviceProviderKeys                      | {{ scenario_3.request_2.serviceProviderKeys            | serviceProviderKeys    }} |
    | targetClosingKey                         | {{ scenario_3.request_2.targetClosingKey               | string                 }} |
    | authorizedParty                          | {{ scenario_3.request_2.authorizedParty                | string                 }} |
* Send OASSignedDirectEncryptedPseudonymRequest
* Expect response matches
    | actualValue                              | expectedValue                                          | expectedValueType         |
    |------------------------------------------|--------------------------------------------------------|---------------------------|
    | statusCode                               | {{ scenario_3.expectations_2.statusCode                | string                 }} |
    | body                                     | {{ scenario_3.expectations_2.responseBody              | json                   }} |
    | json.decodedInput.signedDEP.auditElement | {{ scenario_3.expectations_2.auditValue                | string_resource        }} |
    | json.decodedInput.signatureValue         | {{ scenario_3.expectations_2.signatureValue            | string_signature       }} |
    | json.decodedPseudonym.pseudonymValue     | {{ scenario_3.expectations_2.pseudonymValue            | string_resource        }} |
    | json.decodedPseudonym.pseudonymValue     | {{ scenario_3.expectations_1.pseudonymValue            | string_resource        }} |
* Fail if expectations are not met

